name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  NODE_VERSION: '16.x'
  DB_DATABASE: fusionsuite_dev
  DB_USER: root
  DB_PASSWORD: root

jobs:
  build:

    runs-on: ${{ matrix.operating-system }}

    strategy:
      matrix:
        operating-system: ['ubuntu-latest']
        php-versions: ['7.4', '8.0', '8.1']

    steps:
    - uses: actions/checkout@v2

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-versions }}
        tools: phpstan, cs2pr, phpcs

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v2
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Install dependencies
      run: composer install --prefer-dist --no-progress

    - name: Run PHPStan
      run: phpstan analyse src

    - name: Run phpcs
      run: phpcs -q --report=checkstyle src | cs2pr

    - name: Setup php-fpm
      env:
        version: ${{ matrix.php-versions }}
      run: |
        sudo apt-get install php$version-fpm
        sudo cp /usr/sbin/php-fpm$version /usr/bin/php-fpm # copy to /usr/bin
        sudo service php$version-fpm start
        sudo service php$version-fpm status

    - name: install nginx
      run: sudo apt install nginx

    - name: copy nginx config file
      run: |
        sed -i 's/php7.4-fpm/php${{ matrix.php-versions }}-fpm/g' tests/RESTAPI/fusionsuite.conf
        sudo cp tests/RESTAPI/fusionsuite.conf /etc/nginx/sites-enabled/fusionsuite.conf
        sudo rm /etc/nginx/sites-enabled/default

    - name: start nginx
      run: sudo systemctl start nginx

    - name: start mysql
      run: |
        sudo /etc/init.d/mysql start
        mysql -e 'CREATE DATABASE ${{ env.DB_DATABASE }};' -u${{ env.DB_USER }} -p${{ env.DB_PASSWORD }}

    - name: install the backend
      run: |
        sed -i "s/''/'root'/g" phinx.php
        ./vendor/bin/phinx migrate

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'yarn'
        cache-dependency-path: tests/RESTAPI/yarn.lock

    - name: yarn install
      run: |
        cd tests/RESTAPI/
        yarn install

    - name: paths
      run: |
        pwd
        ls -l

    - name: run REST API tests
      run: |
        cd tests/RESTAPI/
        ./node_modules/.bin/mocha --ignore "./node_modules/**/*.js" "./**/*.js"

